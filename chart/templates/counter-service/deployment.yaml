apiVersion: apps/v1
kind: Deployment
metadata: 
  name: {{ .Release.Name }}-counter-service
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}-counter-service
  replicas: {{ default 1 .Values.counterService.replicaCount | int }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-counter-service
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.counterService.image }}"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: {{ .Values.counterService.service.internalPort | int }}
        env:
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-postgres
              key: password
        - name: DATABASE_USERNAME
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-postgres
              key: username
        - name: DATABASE_NAME
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-postgres
              key: database
        - name: DATABASE_KIND
          value: postgresql
        - name: DATABASE_HOST
          value: {{ .Release.Name }}-postgres
        - name: DATABASE_PORT
          value: "5432"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-redis
              key: password
        - name: REDIS_HOST
          value: {{ .Release.Name }}-redis
        - name: REDIS_PORT
          value: "6379"
        livenessProbe:
          httpGet:
            path: /
            port: {{ .Values.counterService.service.internalPort | int }}
        readinessProbe:
          httpGet:
            path: /
            port: {{ .Values.counterService.service.internalPort | int }}
        resources:
{{ toYaml .Values.counterService.resources | indent 10 }}
